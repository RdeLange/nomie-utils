{"version":3,"file":"index.es.js","sources":["../src/time/time.ts","../src/tokenizer/lite.ts","../src/tokenizer/deep.ts","../src/uom/uom.config.ts","../src/uom/uom.ts"],"sourcesContent":["export default {\n  padTime(t: string) {\n    return (t + '').length === 1 ? (t + '').padStart(2, '0') : t\n  },\n  // Seconds to Time Chunk \"03:30:30\"\n  secondsToTime(secondsStr: string | number): string {\n    let _seconds =\n      typeof secondsStr == 'string' ? parseInt(secondsStr) : secondsStr\n    let seconds = ''\n    let minutes = Math.floor(_seconds / 60).toString()\n    let hours = ''\n    if (parseInt(minutes) > 59) {\n      hours = this.padTime(Math.floor(parseInt(minutes) / 60).toString())\n      minutes = this.padTime(\n        (parseInt(minutes) - parseInt(hours) * 60).toString()\n      )\n    }\n    seconds = this.padTime(Math.floor(_seconds % 60).toString())\n    minutes = this.padTime(minutes)\n\n    if (hours !== '') {\n      return `${this.padTime(hours)}:${minutes}:${seconds}`\n    } else {\n      return `00:${minutes}:${seconds}`\n    }\n  },\n  msToSecond(ms: number) {\n    return ms / 1000\n  },\n  timestringToSeconds(timestring: string): number {\n    let tsa = timestring.split(':')\n    return this.unitsToSeconds(tsa[0], tsa[1], tsa[2])\n  },\n  unitsToSeconds(hour: string, minutes: string, seconds: string): number {\n    let s = 0\n    s = (parseInt(hour) || 0) * 60 * 60\n    s = s + (parseInt(minutes) || 0) * 60\n    s = s + (parseInt(seconds) || 0)\n    return s\n  },\n}\n","import time from '../time/time'\nimport { Token, WordPart } from './_interfaces'\n\n/**\n * getValueString\n * Returns a value string from #tracker(value)\n * @param {String} word\n */\nfunction getValueString(word: string): number {\n  const wordSplit = word.split('(')\n  let value = wordSplit.length == 2 ? wordSplit[1].replace(')', '') : '1'\n  value = value.length ? value : '1'\n  return parseStringValue(value)\n}\n\n/**\n * Parse String Value\n * Convert a string into a value, or a time string 01:03:44 into seconds\n * @param valueStr String\n */\nfunction parseStringValue(valueStr: string): number {\n  if (valueStr.split('.').length == 2) {\n    return parseFloat(valueStr)\n  } else if (valueStr.search(':') > -1) {\n    return time.timestringToSeconds(valueStr)\n  } else {\n    return parseInt(valueStr)\n  }\n}\n\n/**\n * Scrub\n * Removes common word ending characters\n * @param {String} word\n */\nfunction scrub(word: string): WordPart {\n  const cleanedWord: string = word.replace(/(\\'|\\,|\\.|\\!|’|\\?|:)/gi, '')\n  return {\n    word: cleanedWord,\n    remainder: word.replace(cleanedWord, '')\n  }\n}\n\n/**\n * toToken\n * Creates a payload that can be turned into a\n * @param {String} type tracker,context,person,generic\n * @param {String} word\n * @param {String} value\n * @param {String} remainder\n */\nconst prefixes = { context: '+', person: '@', tracker: '#' }\n\nfunction toToken(\n  type: string,\n  word: any,\n  value: any = '',\n  remainder: any = '',\n  raw?: string | any\n): Token {\n  const prefix = prefixes[type] || ''\n  const id = (word.search(/\\(/) > -1\n    ? word.replace(prefix, '').split('(')[0]\n    : word.replace(prefix, '')\n  ).toLowerCase()\n  raw = raw || word || ''\n  return {\n    id,\n    raw, // Raw word\n    prefix, // #,@,+\n    type, // type of trackableElement\n    value, // value of the tracker\n    remainder //any trailing words\n  }\n}\n\n/**\n * Parse\n * parses a string and returns an array of\n * elements\n * @param {String} str\n */\nfunction parse(str: string = ''): Array<Token> {\n  // Split it into an array of lines\n  let lines = str.split(/\\r?\\n/)\n  let final: Array<Token> = []\n  // Loop over each line\n  lines.forEach((line) => {\n    // Extract\n    let tokens = parseStr(line)\n    tokens.forEach((token: Token) => {\n      final.push(token)\n    })\n    // Add the line Break\n    if (lines.length > 1) {\n      final.push(toToken('line-break', ''))\n    }\n  })\n  // Return parsed note\n  return final\n}\n\n/**\n * Parse a Line to an array.\n * @param {String} str\n */\nfunction parseStr(str: string): any {\n  let wordArray = str.trim().split(' ')\n  return (\n    // Split on the space\n    wordArray\n      .map((word: string) => {\n        // Loop over each word\n        let scrubbed = scrub(word) // Scrub it clean\n        let valueStr = getValueString(word)\n        let firstChar = word.trim().substr(0, 1)\n        // switch on first character\n        if (firstChar === '#') {\n          if (word.match(/\\d\\d:\\d\\d/)) {\n            // if it's a timer\n            return toToken(\n              'tracker',\n              word,\n              valueStr,\n              scrubbed.remainder.replace(word, '')\n            )\n          } else {\n            return toToken(\n              'tracker',\n              scrubbed.word,\n              valueStr,\n              scrubbed.remainder.replace(word, '')\n            )\n          }\n        } else if (firstChar === '@') {\n          return toToken(\n            'person',\n            scrubbed.word.toLowerCase(),\n            valueStr,\n            scrubbed.remainder\n          )\n        } else if (firstChar === '+') {\n          return toToken('context', scrubbed.word, valueStr, scrubbed.remainder)\n        } else if (word.search(/https:|http:/) > -1) {\n          return toToken(\n            'link',\n            word.trim().replace(/(https|http):\\/\\//gi, ''),\n            null,\n            null,\n            word.trim()\n          )\n        } else if (word) {\n          return {\n            id: `${word}`,\n            type: 'generic',\n            raw: `${word}`,\n            prefix: null,\n            remainder: null\n          }\n        }\n        return null\n      })\n      .filter((word) => word)\n  )\n} // end parse string\n\nexport default parse\n","import tokenizer from './lite'\nimport { DeepResults, Token } from './_interfaces'\n\nconst remap = {\n  tracker: 'trackers',\n  person: 'people',\n  link: 'links'\n}\n\n/**\n * Stats\n * Generate stats for a set of tokens\n * @param tokens Array\n */\nfunction stats(tokens: Array<Token>): DeepResults {\n  let map: any = {\n    trackers: {},\n    people: {},\n    context: {},\n    links: {}\n  }\n  // Loop over tokens\n  tokens.forEach((token: Token) => {\n    let type = remap.hasOwnProperty(token.type) ? remap[token.type] : token.type\n    // set type if doesnt exist\n    map[type] = map[type] || {}\n    // Setup id in type, if not exist step to first token\n    map[type][token.id] = map[type][token.id] || Object.assign(token, {})\n    // Setup a holder vor the values\n    map[type][token.id].values = map[type][token.id].values || []\n    // Push the value, or default to 1\n    map[type][token.id].values.push(token.value || 1)\n  })\n\n  // Create a Map for Results\n  let results: any = {\n    trackers: [],\n    context: [],\n    people: [],\n    links: []\n  }\n\n  // Loop over the map to do final filtering\n  Object.keys(map).forEach((type) => {\n    let items = map[type]\n    // Loop over items for this type\n    results[type] = Object.keys(items).map((id) => {\n      let token = items[id]\n      token.sum = sum(token.values)\n      token.avg = average(token.values)\n      return token\n    })\n  })\n\n  let response = results\n  response.words = tokens.length\n\n  return response\n}\n\n/**\n * Deep Tokenization\n * Parse, and calculate base stats\n * @param nums Array\n */\nfunction deep(str: string): DeepResults {\n  let tokens: Array<Token> = tokenizer(str)\n  let response = stats(tokens)\n  response.tokens = tokens\n  // Return selectors\n  response.get = (type: string, id: string) => {\n    type = remap.hasOwnProperty(type) ? remap[type] : type\n    return response.hasOwnProperty(type)\n      ? response[type].find((t: Token) => t.id == id)\n      : null\n  }\n  return response\n}\n\n/**\n * Sum all numbers in an array\n * @param nums Array\n */\nfunction sum(nums: Array<number>): number {\n  return nums.reduce(function (a, b) {\n    return a + b\n  }, 0)\n}\n/**\n * Average all numbers in an array\n * @param nums Array\n */\nfunction average(nums: Array<number>): number {\n  const total = nums.reduce((acc, c) => acc + c, 0)\n  return total / nums.length\n}\n\nexport default deep\n","export default {\n  num: {\n    singular: 'Count',\n    plural: 'Count',\n    symbol: 'count',\n    type: 'general'\n  },\n  reps: {\n    singular: 'Rep',\n    plural: 'Reps',\n    symbol: 'reps',\n    type: 'general'\n  },\n  percent: {\n    singular: 'Percent',\n    plural: 'Percent',\n    symbol: '%',\n    type: 'general',\n    symbolAffix: 'post'\n  },\n  dollars: {\n    singular: 'Dollar',\n    plural: 'Dollars',\n    symbol: '$',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '$' + v.toFixed(2)\n    }\n  },\n  peso: {\n    singular: 'Peso',\n    plural: 'Peso',\n    symbol: '$',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '$' + v.toFixed(2)\n    }\n  },\n  franc: {\n    singular: 'Franc',\n    plural: 'Francs',\n    symbol: 'Fr.',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return 'Fr. ' + v.toFixed(2)\n    }\n  },\n  cpound: {\n    singular: 'Pound',\n    plural: 'Pounds',\n    symbol: '£',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '£' + v.toFixed(2)\n    }\n  },\n  rupee: {\n    singular: 'Rupee',\n    plural: 'Rupees',\n    symbol: 'Rs.',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return 'Rs. ' + v.toFixed(2)\n    }\n  },\n  yen: {\n    singular: 'Yen',\n    plural: 'Yen',\n    symbol: '¥',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '¥' + v.toFixed(2)\n    }\n  },\n  yuan: {\n    singular: 'Yuan',\n    plural: 'Yuan',\n    symbol: '¥',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '¥' + v.toFixed(2)\n    }\n  },\n  bitcoin: {\n    singular: 'Bitcoin',\n    plural: 'Bitcoins',\n    type: 'currency',\n    symbolAffix: 'pre',\n    symbol: 'B'\n  },\n  euro: {\n    singular: 'Euro',\n    plural: 'Euros',\n    symbol: '€',\n    type: 'currency',\n    symbolAffix: 'pre',\n    display: function (v: number) {\n      return '€' + v.toFixed(2)\n    }\n  },\n  timer: {\n    singular: 'Time',\n    plural: 'Time',\n    symbol: 'time',\n    type: 'Timer',\n    symbolAffix: 'post',\n    symbolSpace: false,\n    display: function (v: any) {\n      var sec_num = parseInt(v, 10) // don't forget the second param\n      var hours = Math.floor(sec_num / 3600)\n      var minutes = Math.floor((sec_num - hours * 3600) / 60)\n      var seconds = sec_num - hours * 3600 - minutes * 60\n      return !hours\n        ? minutes + 'm ' + seconds + 's'\n        : hours + 'h ' + minutes + 'm'\n    }\n  },\n  sec: {\n    singular: 'Second',\n    plural: 'Seconds',\n    symbol: 'secs',\n    type: 'time',\n    symbolAffix: 'post',\n    symbolSpace: true,\n    display: function (v: number) {\n      if (v < 3600) {\n        return v + 's'\n      } else {\n        return Math.round((v / 60) * 100) / 100 + 'm'\n      }\n    }\n  },\n  min: {\n    singular: 'Minute',\n    plural: 'Minutes',\n    symbol: 'm',\n    type: 'time',\n    symbolAffix: 'post',\n    symbolSpace: false,\n    display: function (v: number) {\n      if (v < 60) {\n        return v + 'm'\n      } else if (v > 60 && v < 1441) {\n        return Math.round((v / 60) * 100) / 100 + 'h'\n      } else if (v > 1440 && v < 10000) {\n        return (v / 1440).toFixed(0) + 'd'\n      } else {\n        return (v / 1440).toFixed(0) + 'd'\n      }\n    }\n  },\n  hour: {\n    singular: 'Hour',\n    plural: 'Hours',\n    symbol: 'hrs',\n    type: 'time',\n    symbolAffix: 'post',\n    symbolSpace: false,\n    display: function (v: number) {\n      if (v < 168) {\n        return Math.round(v * 100) / 100 + 'h'\n      } else {\n        return (v / 24).toFixed(0) + 'd'\n      }\n    }\n  },\n  day: {\n    singular: 'Day',\n    plural: 'Days',\n    symbol: 'days',\n    type: 'time'\n  },\n  mm: {\n    singular: 'Millimeter',\n    plural: 'Millimeters',\n    symbol: 'mm',\n    type: 'distance'\n  },\n  cm: {\n    singular: 'Centimeter',\n    plural: 'Centimeters',\n    symbol: 'cm',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  meter: {\n    singular: 'Meter',\n    plural: 'Meter',\n    symbol: 'm',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  km: {\n    singular: 'Kilometer',\n    plural: 'Kilometers',\n    symbol: 'km',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  inch: {\n    singular: 'Inch',\n    plural: 'Inches',\n    symbol: 'in',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  degrees: {\n    singular: 'Degree',\n    plural: 'Degrees',\n    symbol: '°',\n    type: 'temperature',\n    symbolAffix: 'post',\n    symbolSpace: false\n  },\n  celsius: {\n    singular: 'Celsius',\n    plural: 'Celsius',\n    symbol: '°C',\n    type: 'temperature',\n    symbolAffix: 'post',\n    symbolSpace: false\n  },\n  fahrenheit: {\n    singular: 'Fahrenheit',\n    plural: 'Fahrenheit',\n    symbol: '°F',\n    type: 'temperature',\n    symbolAffix: 'post',\n    symbolSpace: false\n  },\n  foot: {\n    singular: 'Foot',\n    plural: 'Feet',\n    symbol: 'ft',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  yard: {\n    singular: 'Yard',\n    plural: 'Yards',\n    symbol: 'yrds',\n    type: 'distance',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  mile: {\n    singular: 'Mile',\n    plural: 'Miles',\n    symbol: 'mi',\n    type: 'distance',\n    symbolAffix: 'post'\n  },\n  mg: {\n    singular: 'Milligram',\n    plural: 'Milligrams',\n    symbol: 'mg',\n    type: 'weight',\n    symbolAffix: 'post'\n  },\n  gram: {\n    singular: 'Gram',\n    plural: 'Grams',\n    symbol: 'g',\n    type: 'weight',\n    symbolAffix: 'post'\n  },\n  kg: {\n    singular: 'Kilogram',\n    plural: 'Kilograms',\n    symbol: 'kg',\n    type: 'weight',\n    symbolAffix: 'post'\n  },\n  stone: {\n    singular: 'Stone',\n    plural: 'Stones',\n    symbol: 'st',\n    type: 'weight'\n  },\n  oz: {\n    singular: 'Ounce',\n    plural: 'Ounces',\n    symbol: 'oz',\n    type: 'weight',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  pound: {\n    singular: 'Pound',\n    plural: 'Pounds',\n    symbol: 'lbs',\n    type: 'weight',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  cup: {\n    singular: 'Cup',\n    plural: 'Cups',\n    symbol: 'cups',\n    type: 'volume',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  fluidounce: {\n    singular: 'Fluid Ounce',\n    plural: 'Fluid Ounces',\n    symbol: 'oz',\n    type: 'volume',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  pint: {\n    singular: 'Pint',\n    plural: 'Pints',\n    symbol: 'pint',\n    type: 'volume'\n  },\n  quart: {\n    singular: 'Quart',\n    plural: 'Quarts',\n    symbol: 'qt',\n    type: 'volume',\n    symbolAffix: 'post'\n  },\n  gallon: {\n    singular: 'Gallon',\n    plural: 'Gallons',\n    symbol: 'gal',\n    type: 'volume',\n    symbolAffix: 'post',\n    symbolSpace: true\n  },\n  liter: {\n    singular: 'Liter',\n    plural: 'Liters',\n    symbol: 'L',\n    type: 'volume',\n    symbolAffix: 'post',\n    symbolSpace: false\n  },\n  milliliter: {\n    singular: 'Milliliter',\n    plural: 'Milliliters',\n    symbol: 'ml',\n    type: 'volume',\n    symbolAffix: 'post',\n    symbolSpace: false\n  }\n}\n","import UOMS from './uom.config'\n\nfunction main() {\n  /**\n   * Array of UOMS\n   */\n  function toArray(): Array<any> {\n    return Object.keys(UOMS).map((key) => {\n      let obj = UOMS[key]\n      obj.key = key\n      return obj\n    })\n  }\n\n  /**\n   * Map of UOMS grouped by type\n   * { general: [], volume: []...}\n   */\n  function toGroupedArray(): any {\n    let items = {}\n    Object.keys(UOMS).forEach((key) => {\n      let obj = UOMS[key]\n      obj.key = key\n      items[obj.type] = items[obj.type] || []\n      items[obj.type].push(obj)\n    })\n    return items\n  }\n\n  /**\n   * Format a value to a UOM's display\n   * @param value Number\n   * @param key String\n   * @param includeUnit boolean\n   */\n  function format(\n    value: any,\n    key: string,\n    includeUnit: boolean = true\n  ): string {\n    if (UOMS.hasOwnProperty(key) && !isNaN(value)) {\n      let symbol = UOMS[key].symbol\n      let affix = UOMS[key].symbolAffix\n      let space = UOMS[key].symbolSpace || false ? ' ' : ''\n      // Get display formatter for key if one exists.\n      let displayFormatter = UOMS[key].display || null\n      // Does the UOM have it's own display formatter?\n      if (displayFormatter) {\n        return displayFormatter(value) // displayFormatter(v);\n      } else {\n        if (!isNaN(parseFloat(value)) && isFinite(value) && value !== 0) {\n          value = addCommas(value)\n        }\n        if (affix && symbol && includeUnit) {\n          if (affix == 'pre') {\n            return symbol + space + value\n          } else {\n            return value + space + symbol\n          }\n        } else {\n          return value\n        }\n      } // end if the uom has it's own display\n    } else {\n      return value\n    }\n  }\n\n  /**\n   * Plural\n   * @param key string\n   */\n  function plural(key: string): string {\n    return UOMS.hasOwnProperty(key) ? UOMS[key].plural : key\n  }\n\n  /**\n   * Singular\n   * @param key string\n   */\n  function singular(key: string): string {\n    return UOMS.hasOwnProperty(key) ? UOMS[key].singular : key\n  }\n\n  /**\n   * Abreviation\n   * @param key string\n   */\n  function abv(key: string): any {\n    return UOMS.hasOwnProperty(key) ? UOMS[key].symbol : null\n  }\n\n  /**\n   * Add Comma to a number\n   * @param base number\n   */\n  function addCommas(base: number = 0): string {\n    let num: string = `${base}`\n    let x = num.split('.')\n    let x1 = x[0]\n    let x2 = x.length > 1 ? '.' + x[1] : ''\n    let rgx = /(\\d+)(\\d{3})/\n    while (rgx.test(x1)) {\n      x1 = x1.replace(rgx, '$1' + ',' + '$2')\n    }\n    return x1 + x2\n  }\n\n  return {\n    toArray,\n    toGroupedArray,\n    plural,\n    singular,\n    abv,\n    format,\n    addCommas\n  }\n}\n\nexport default main()\n"],"names":["tokenizer"],"mappings":"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"}